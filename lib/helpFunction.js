var minify = require('html-minifier').minify;
var fs = require('fs');
var imagemin = require('imagemin');
var imageminJpegtran = require('imagemin-jpegtran');
var imageminPngquant = require('imagemin-pngquant');




var HF = {
    minifyHtml: function (data) {
        var newData = minify( data , {
            conservativeCollapse: true,
            collapseWhitespace: true,
            trimCustomFragments: true,
            useShortDoctype: true,
            collapseInlineTagWhitespace: true,
            // removeEmptyElements: true,
            removeComments: true,
            processConditionalComments: true,
            removeEmptyAttributes: true,
            removeRedundantAttributes: true,
            includeAutoGeneratedTags: true,
            html5: true,
            minifyCSS: true,
            minifyJS: true,
            preserveLineBreaks: true
        });
        return newData
    }, readFile: function (url) {
        return fs.readFileSync(url).toString();
    }, writeFile: function (data, url) {
        fs.writeFileSync(url, data);
    }, replaceText: function (data, from, to) {
        return data.replace( new RegExp(from, 'g'), to );
    }, replaceTextDir: function (data, dir) {
        return data.replace( new RegExp('%dir%', 'g'), dir );
    }, appendJsToStart: function (data, js) {
        return data.replace( new RegExp('<body>', 'g'), '<body><script>' + js + '</script>');
    }, appendJsToFinish: function (data, js) {
        return data.replace( new RegExp('</body>', 'g'), '<script>' + js + '</script></body>');
    }, appendCssToStart: function (data, css) {
        return data.replace( new RegExp('<body>', 'g'), '<body><style>' + css + '</style>');
    }, appendCssToFinish: function (data, css) {
        return data.replace( new RegExp('</body>', 'g'), '<style>' + css + '</style></body>');
    }, compressImg: function (url) {
        try {
            imagemin([url + '/*.{jpg,png}'], url, {
                plugins: [
                    imageminJpegtran(),
                    imageminPngquant({quality: '65-80'})
                ]
            });
            console.log('compress ok');
        } catch (err) {
            console.log('compress err', err)
        }
    }
};
module.exports = HF;